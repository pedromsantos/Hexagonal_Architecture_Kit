[project]
name = "katacombs-api"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = ["fastapi>=0.117.1", "pydantic>=2.11.9", "uvicorn>=0.36.0"]

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "pylance>=0.36.0",
    "pyright>=1.1.405",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "ruff>=0.13.1",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]

[tool.ruff]
# Very strict settings
line-length = 100
target-version = "py312"
extend-exclude = ["migrations", ".venv", "__pycache__"]

[tool.ruff.lint]
# Enable all rules by default, then selectively disable
select = ["ALL"]
ignore = [
    # Docstrings - ignore all docstring requirements
    "D", # All pydocstyle rules (docstring requirements)

    # Formatter conflicts
    "COM812", # Trailing comma missing (conflicts with formatter)
    "ISC001", # Implicitly concatenated string literals (conflicts with formatter)

    # Architecture choices
    "TID252", # Prefer absolute imports (we use relative imports in our architecture)
    "INP001", # Implicit namespace package (acceptable for our structure)
]
[tool.ruff.lint.mccabe]
# Maximum complexity for functions
max-complexity = 5

# Docstring rules disabled - see ignore section above

# Strict import sorting
[tool.ruff.lint.isort]
case-sensitive = true
force-single-line = false
known-first-party = ["src"]

[tool.ruff.lint.per-file-ignores]
# Test files can have longer lines and more complex functions
"tests/*" = [
    "S101",    # Use of assert detected (assert is expected in tests)
    "PLR0913", # Too many arguments to function call
    "PLR2004", # Magic value used in comparison
    "ANN201",  # Missing return type annotation for public function
]

[tool.pyright]
# Strictest possible settings
include = ["src", "tests", "main.py"]
exclude = ["**/__pycache__"]
venvPath = "."
venv = ".venv"

# Type checking mode - strictest possible
typeCheckingMode = "strict"
pythonVersion = "3.12"
pythonPlatform = "All"

# Report all issues
reportMissingImports = "error"
reportMissingTypeStubs = "error"
reportImportCycles = "error"
reportUnusedImport = "error"
reportUnusedClass = "error"
reportUnusedFunction = "error"
reportUnusedVariable = "error"
reportDuplicateImport = "error"
reportOptionalSubscript = "error"
reportOptionalMemberAccess = "error"
reportOptionalCall = "error"
reportOptionalIterable = "error"
reportOptionalContextManager = "error"
reportOptionalOperand = "error"
reportTypedDictNotRequiredAccess = "error"
reportPrivateImportUsage = "error"
reportConstantRedefinition = "error"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "error"
reportInconsistentConstructor = "error"
reportOverlappingOverloads = "error"
reportMissingSuperCall = "information"            # Not always needed
reportUninitializedInstanceVariable = "error"
reportInvalidStringEscapeSequence = "error"
reportUnknownParameterType = "error"
reportUnknownArgumentType = "error"
reportUnknownLambdaType = "error"
reportUnknownVariableType = "error"
reportUnknownMemberType = "error"
reportMissingParameterType = "error"
reportMissingTypeArgument = "error"
reportInvalidTypeVarUse = "error"
reportCallInDefaultInitializer = "error"
reportUnnecessaryIsInstance = "error"
reportUnnecessaryCast = "error"
reportUnnecessaryComparison = "error"
reportAssertAlwaysTrue = "error"
reportSelfClsParameterName = "error"
reportImplicitStringConcatenation = "information" # Allow for readability
reportUndefinedVariable = "error"
reportUnboundVariable = "error"
reportInvalidStubStatement = "error"
reportIncompleteStub = "error"
reportUnsupportedDunderAll = "error"
reportUnusedCallResult = "information"            # Sometimes we don't need the result
reportUnusedCoroutine = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportMatchNotExhaustive = "error"

# Strict mode enables additional checks
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
strictParameterNoneValue = true

[tool.ruff.format]
# Use double quotes, indent with 4 spaces
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
